-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS auths
(
    id SERIAL PRIMARY KEY,
    email character varying(150),
    hash character varying(225)    
);

CREATE TABLE IF NOT EXISTS landlords
(
    id SERIAL PRIMARY KEY,
    name_id integer,
    property_id integer,    
    FOREIGN KEY (property_id) REFERENCES landlords (id),
    FOREIGN KEY (name_id) REFERENCES landlords (id)
);

COMMENT ON TABLE public.landlords
    IS 'for house owners';


CREATE TABLE IF NOT EXISTS comments
(
    id SERIAL PRIMARY KEY,
    comment character varying(10000),
    time_date date
);


CREATE TABLE IF NOT EXISTS tenants
(
    id SERIAL PRIMARY KEY,
    comment_id integer NOT NULL,
    FOREIGN KEY (comment_id) REFERENCES comments (id)
);

COMMENT ON TABLE public.tenants
    IS 'house seekers';

CREATE TABLE IF NOT EXISTS property_types
(
    id SERIAL PRIMARY KEY,
    no_of_room integer,
    flat boolean,
    self_con boolean
);

CREATE TABLE IF NOT EXISTS payments
(
    id SERIAL PRIMARY KEY,
    no_of_month integer,
    type character varying(20),
    paid boolean,
    pay_date date
);


CREATE TABLE IF NOT EXISTS addresses
(
    id SERIAL PRIMARY KEY,
    number integer,
    street character varying(30),
    quarter character varying(30),
    village character varying(30),
    lga character varying(30),
    state character varying(30),
    country character varying(30)
);

CREATE TABLE IF NOT EXISTS credentials
(
    id SERIAL PRIMARY KEY,
    "desc" character varying(225) NOT NULL
);


CREATE TABLE IF NOT EXISTS properties
(
    id SERIAL PRIMARY KEY,
    available integer NOT NULL,
    ppt_type_id integer NOT NULL,
    ownership boolean NOT NULL,
    credential_id integer,
    address_id integer,
    payment_id integer,
    inspected boolean,
    inspect_date date,
    FOREIGN KEY (payment_id) REFERENCES payments (id),
    FOREIGN KEY (address_id) REFERENCES addresses (id),
    FOREIGN KEY (credential_id) REFERENCES credentials (id),
    FOREIGN KEY (ppt_type_id) REFERENCES property_types (id)
);

CREATE TABLE IF NOT EXISTS houses
(
    id SERIAL PRIMARY KEY,
    name character varying,
    ppt_type_id integer,
    address_id integer,
    price_id integer,
    FOREIGN KEY (price_id) REFERENCES prices (id),
    FOREIGN KEY (address_id) REFERENCES addresses (id),    
    FOREIGN KEY (ppt_type_id) REFERENCES property_types (id)
);

CREATE TABLE IF NOT EXISTS prices
(
    id SERIAL PRIMARY KEY,
    amount integer,
    currency character varying,
    property_id integer,
    landlord_id integer,
    tenant_id integer,
    payment_id integer,
    -- FOREIGN KEY (property_id) REFERENCES properties (id),
    FOREIGN KEY (landlord_id) REFERENCES landlords (id),
    FOREIGN KEY (tenant_id) REFERENCES tenants (id),
    FOREIGN KEY (payment_id) REFERENCES payments (id)
);

CREATE TABLE IF NOT EXISTS names
(
    id SERIAL PRIMARY KEY,
    f_name character varying(20),
    m_name character varying(20),
    l_name character varying(20),
    o_name character varying(20),
    tenant_id integer,
    landlord_id integer,
    FOREIGN KEY (tenant_id) REFERENCES tenants (id),
    FOREIGN KEY (landlord_id) REFERENCES landlords (id)
);

CREATE TABLE IF NOT EXISTS fees
(
    id SERIAL PRIMARY KEY,
    agreement integer,
    commission integer,
    security integer,
    electricity integer,
    waste_disposal integer,
    tenant_id integer,
    landlord_id integer,
    property_id integer,
    FOREIGN KEY (tenant_id) REFERENCES tenants (id),
    FOREIGN KEY (landlord_id) REFERENCES landlords (id),
    FOREIGN KEY (property_id) REFERENCES properties (id)
);

CREATE TABLE IF NOT EXISTS enquiries
(
    id SERIAL PRIMARY KEY,
    detail character varying(10000),
    tenant_id integer,
    date date NOT NULL,
    FOREIGN KEY (tenant_id) REFERENCES tenants (id)
);

CREATE TABLE IF NOT EXISTS chats
(
    id SERIAL PRIMARY KEY,
    msg character varying(225),
    landlord_id integer,
    tenant_id integer,
    date_time date,
    FOREIGN KEY (tenant_id) REFERENCES tenants (id),
    FOREIGN KEY (landlord_id) REFERENCES landlords (id)
);

CREATE TABLE IF NOT EXISTS pics
(
    id SERIAL PRIMARY KEY,
    type character varying(15) NOT NULL,
    mime_type character varying(150) NOT NULL,
    extension character varying(10) NOT NULL,
    size character varying(10) NOT NULL,
    file_name character varying(225) NOT NULL,
    house_id integer,
    FOREIGN KEY (house_id) REFERENCES houses (id)
);

COMMENT ON TABLE public.properties
    IS 'That is houses and  their types
';


COMMENT ON TABLE public.property_types
    IS 'Types of houses or properties like 2 bedroom flat';



COMMENT ON TABLE public.addresses
    IS 'property addresses';



COMMENT ON TABLE public.payments
    IS 'Payment of houses and their type';

COMMENT ON TABLE public.prices
    IS 'Prices of various properties';



COMMENT ON TABLE public.names
    IS 'All names';



COMMENT ON TABLE public.pics
    IS 'Images of other data';



COMMENT ON TABLE public.credentials
    IS 'Property information that will identify the real owner as Landlord';



COMMENT ON TABLE public.comments
    IS 'Tenants'' talks about the property';



COMMENT ON TABLE public.fees
    IS 'Various amount to pay by the tenant that can sum up to be rental fee';


COMMENT ON TABLE public.enquiries
    IS 'Tenant making enquiry for a ppt';



COMMENT ON TABLE public.chats
    IS 'Btw landlord and tenant';

ALTER TABLE IF EXISTS public.landlords
    ADD FOREIGN KEY (name_id)
    REFERENCES public.names (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.landlords
    ADD FOREIGN KEY (property_id)
    REFERENCES public.properties (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.tenants
    ADD FOREIGN KEY (comment_id)
    REFERENCES public.comments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.properties
    ADD FOREIGN KEY (address_id)
    REFERENCES public.addresses (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.properties
    ADD FOREIGN KEY (ppt_type_id)
    REFERENCES public.property_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.properties
    ADD FOREIGN KEY (id)
    REFERENCES public.fees (property_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.properties
    ADD FOREIGN KEY (payment_id)
    REFERENCES public.payments (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.properties
    ADD FOREIGN KEY (credential_id)
    REFERENCES public.credentials (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.names
    ADD FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.pics
    ADD FOREIGN KEY (property_id)
    REFERENCES public.properties (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.fees
    ADD FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.fees
    ADD FOREIGN KEY (landlord_id)
    REFERENCES public.landlords (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.fees
    ADD FOREIGN KEY (property_id)
    REFERENCES public.properties (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.enquiries
    ADD FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.chats
    ADD FOREIGN KEY (tenant_id)
    REFERENCES public.tenants (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.chats
    ADD FOREIGN KEY (landlord_id)
    REFERENCES public.landlords (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;

DROP TABLE auths;
DROP TABLE landlords CASCADE;
DROP TABLE chats CASCADE;
DROP TABLE comments CASCADE;
DROP TABLE credentials CASCADE;
DROP TABLE enquiries CASCADE;
DROP TABLE fees CASCADE;
DROP TABLE houses CASCADE;
DROP TABLE names CASCADE;
DROP TABLE payments CASCADE;
DROP TABLE pics CASCADE;
DROP TABLE prices CASCADE;
DROP TABLE properties CASCADE;
DROP TABLE property_types CASCADE;
DROP TABLE tenants CASCADE;
DROP TABLE addresses CASCADE;
